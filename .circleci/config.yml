version: 2.1
orbs:
  slack: circleci/slack@3.4.2
workflows:
  version: 2
  build:
    jobs:
      - test

jobs:
  test:
    resource_class: 2xlarge
    machine:
      image: ubuntu-2004:202008-01
    steps:
      - checkout
      - run:
          name: Setup
          command: |
            export DEBIAN_FRONTEND=noninteractive
            sudo apt update
            # install dependencies
            sudo apt install -y git
            # clone, build, and install driver
            git clone --depth 1 --branch 0.3.5 https://github.com/ldbc/ldbc_snb_driver && cd ldbc_snb_driver && mvn install -DskipTests && cd ..
            # PostgreSQL
            pip3 install --user --progress-bar off psycopg2-binary
      - run:
          name: Build project
          command: ./build.sh
      - run:
          name: Tiny data set - Load Cypher/Neo4j database (1st time)
          command: |
            cd cypher
            . scripts/environment-variables-default.sh
            scripts/load-in-one-step.sh
            cd ..
      - run:
          name: Tiny data set - Create validation parameters with Neo4j/Cypher project
          command: |
            cd cypher
            driver/create-validation-parameters.sh
            mv validation_params.csv validation_params_cypher_tiny.csv
            cd ..
      - run:
          name: Tiny data set - Load PostgreSQL database (1st time)
          command: |
            cd postgres
            export POSTGRES_CSV_DIR=`pwd`/test-data/
            scripts/start.sh
            scripts/create-db.sh
            scripts/load.sh
            cd ..
      - run:
          name: Tiny data set - Create validation parameters with the PostgreSQL project
          command: |
            cd postgres
            driver/create-validation-parameters.sh
            mv validation_params.csv validation_params_postgres_tiny.csv
            cd ..
      - run:
          name: Tiny data set - Load Cypher/Neo4j database (2nd time)
          command: |
            cd cypher
            . scripts/environment-variables-default.sh
            scripts/load-in-one-step.sh
            cd ..
      - run:
          name: Tiny data set - Cross-validate the Neo4j/Cypher project based on the results from Postgres
          command: |
            mv postgres/validation_params_postgres_tiny.csv cypher/validation_params.csv
            cd cypher
            driver/validate.sh | tee validation-log.txt
            grep 'Validation Result: PASS' validation-log.txt
            cd ..
      - run:
          name: Tiny data set - Load PostgreSQL database (2nd time)
          command: |
            cd postgres
            export POSTGRES_CSV_DIR=`pwd`/test-data/
            scripts/start.sh
            scripts/create-db.sh
            scripts/load.sh
            cd ..
      - run:
          name: Tiny data set - Cross-validate the Postgres project based on the results from Neo4j/Cypher
          command: |
            mv cypher/validation_params_cypher_tiny.csv postgres/validation_params.csv
            cd postgres
            driver/validate.sh | tee validation-log.txt
            grep 'Validation Result: PASS' validation-log.txt
            cd ..
      - run:
          name: Download SF1 data set
          command: |
            wget https://surfdrive.surf.nl/files/index.php/s/Ar7kacLw3LVzQaf/download --quiet --output-document=sf1.zip
            unzip sf1.zip
            # substitution parameters and updateStreams for Neo4j/Cypher
            cp ./sf1/substitution_parameters/* ./cypher/test-data/substitution_parameters/
            cp ./sf1/social_network-csv_composite/updateStream* ./cypher/test-data/update_streams/
      - run:
          name: SF1 data set - Load Cypher/Neo4j database
          command: |
            cd cypher
            . scripts/environment-variables-default.sh
            export NEO4J_VANILLA_CSV_DIR=`pwd`/../sf1/social_network-csv_composite
            scripts/load-in-one-step.sh
            cd ..
      - run:
          name: SF1 data set - Create validation parameters with the Neo4j/Cypher
          command: |
            cd cypher
            driver/create-validation-parameters.sh
            mv validation_params.csv validation_params_cypher_sf1.csv
            cd ..
      - run:
          name: SF1 data set - Load PostgreSQL database
          command: |
            cd postgres
            export POSTGRES_CSV_DIR=`pwd`/../sf1/social_network-csv_merge_foreign
            scripts/start.sh
            scripts/create-db.sh
            scripts/load.sh
            cd ..
      - run:
          name: SF1 data set - Cross-validate the Postgres project based on the results from Neo4j/Cypher
          command: |
            mv cypher/validation_params_cypher_sf1.csv postgres/validation_params.csv
            cd postgres
            driver/validate.sh | tee validation-log.txt
            grep 'Validation Result: PASS' validation-log.txt
            cd ..
      - run:
          name: Download SF10 data set
          command: |
            wget https://surfdrive.surf.nl/files/index.php/s/aljHOI0502qJrcF/download --quiet --output-document=sf10.zip
            unzip sf10.zip
            # substitution parameters and updateStreams for Neo4j/Cypher
            cp ./sf10/substitution_parameters/* ./cypher/test-data/substitution_parameters/
            cp ./sf10/social_network-csv_composite/updateStream* ./cypher/test-data/update_streams/
      - run:
          name: SF10 data set - Load Cypher/Neo4j database
          command: |
            cd cypher
            . scripts/environment-variables-default.sh
            export NEO4J_VANILLA_CSV_DIR=`pwd`/../sf10/social_network-csv_composite
            scripts/load-in-one-step.sh
            cd ..
      - run:
          name: SF10 data set - Create validation parameters with the Neo4j/Cypher
          no_output_timeout: 60m
          command: |
            cd cypher
            driver/create-validation-parameters.sh
            mv validation_params.csv validation_params_cypher_sf10.csv
            cd ..
      - run:
          name: SF10 data set - Load PostgreSQL database
          command: |
            cd postgres
            export POSTGRES_CSV_DIR=`pwd`/../sf10/social_network-csv_merge_foreign
            scripts/start.sh
            scripts/create-db.sh
            scripts/load.sh
            cd ..
      - run:
          name: SF10 data set - Cross-validate the Postgres project based on the results from Neo4j/Cypher
          command: |
            mv cypher/validation_params_cypher_sf10.csv postgres/validation_params.csv
            cd postgres
            driver/validate.sh | tee validation-log.txt
            grep 'Validation Result: PASS' validation-log.txt
            cd ..
      - slack/status
